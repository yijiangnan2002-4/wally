/* Copyright Statement:
 *
 * (C) 2022  Airoha Technology Corp. All rights reserved.
 *
 * This software/firmware and related documentation ("Airoha Software") are
 * protected under relevant copyright laws. The information contained herein
 * is confidential and proprietary to Airoha Technology Corp. ("Airoha") and/or its licensors.
 * Without the prior written permission of Airoha and/or its licensors,
 * any reproduction, modification, use or disclosure of Airoha Software,
 * and information contained herein, in whole or in part, shall be strictly prohibited.
 * You may only use, reproduce, modify, or distribute (as applicable) Airoha Software
 * if you have agreed to and been bound by the applicable license agreement with
 * Airoha ("License Agreement") and been granted explicit permission to do so within
 * the License Agreement ("Permitted User").  If you are not a Permitted User,
 * please cease any access or use of Airoha Software immediately.
 * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
 * THAT AIROHA SOFTWARE RECEIVED FROM AIROHA AND/OR ITS REPRESENTATIVES
 * ARE PROVIDED TO RECEIVER ON AN "AS-IS" BASIS ONLY. AIROHA EXPRESSLY DISCLAIMS ANY AND ALL
 * WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR NONINFRINGEMENT.
 * NEITHER DOES AIROHA PROVIDE ANY WARRANTY WHATSOEVER WITH RESPECT TO THE
 * SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY, INCORPORATED IN, OR
 * SUPPLIED WITH AIROHA SOFTWARE, AND RECEIVER AGREES TO LOOK ONLY TO SUCH
 * THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO. RECEIVER EXPRESSLY ACKNOWLEDGES
 * THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES
 * CONTAINED IN AIROHA SOFTWARE. AIROHA SHALL ALSO NOT BE RESPONSIBLE FOR ANY AIROHA
 * SOFTWARE RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
 * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND AIROHA'S ENTIRE AND
 * CUMULATIVE LIABILITY WITH RESPECT TO AIROHA SOFTWARE RELEASED HEREUNDER WILL BE,
 * AT AIROHA'S OPTION, TO REVISE OR REPLACE AIROHA SOFTWARE AT ISSUE,
 * OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE CHARGE PAID BY RECEIVER TO
 * AIROHA FOR SUCH AIROHA SOFTWARE AT ISSUE.
 */

/**
 * File: apps_config_nvkey_struct.h.h
 *
 * Description: This file defines the structure format of NVKey.
 *
 */

#ifndef __APPS_COMMON_NVKEY_STRUCT_H__
#define __APPS_COMMON_NVKEY_STRUCT_H__

#include <stdint.h>

/**
 *  @brief This structure defines the information needed by the silence detection feature.
 */
typedef struct
{
    uint32_t delay_stop_timer_period;    /* The expiration time of the timer which is used to delay the CIS disconnetion in some condition.  */
} __attribute__((__packed__)) app_silence_detection_nvkey_struct;


#define AUDEARA_AUDIOGRAM_LENGTH 49
#define AUDEARA_HLC_TABLE_LENGTH 560
#define AUDEARA_EQ_DATA_LENGTH 64

const static uint8_t audeara_default_audiogram[AUDEARA_AUDIOGRAM_LENGTH] = 
{
    0x0, 0xD4, 0x30, 0x0, 0x0, 0x0, 0x0, 0x0, 0xA8, 0x61, 0x0, 0x0, 0x0, 0x0, 0x0, 0x50, 0xC3, 0x0, 0x0, 0x0, 0x0, 0x0, 0xA0, 0x86, 0x1, 0x0, 0x0, 0x0, 0x0, 0x40, 0xD, 0x3, 0x0, 0x0, 0x0, 0x0, 0x80, 0x1A, 0x6, 0x0, 0x0, 0x0, 0x0, 0x0, 0x35, 0xC, 0x0, 0x0, 0x0
};

const static uint8_t audeara_default_hlc[AUDEARA_HLC_TABLE_LENGTH] = 
{
 0xC, 0xA, 0x14, 0x50, 0xFC, 0x41, 0x0, 0x32, 0x0, 0x0, 0x0, 0x63, 0xA, 0x14, 0x50, 0xFC, 0x41, 0x0, 0x32, 0x0, 0x0, 0x0, 0x60, 0xA, 0x14, 0x50, 0xFD, 0x41, 0x1, 0x32, 0x1, 0x0, 0x0, 0x62, 0xA, 0x14, 0x50, 0xFD, 0x41, 0x2, 0x32, 0x2, 0x0, 0x1, 0x63, 0xA, 0x14, 0x50, 0xFD, 0x41, 0x2, 0x32, 0x2, 0x0, 0x1, 0x63, 0xA, 0x14, 0x50, 0xFD, 0x41, 0x2, 0x32, 0x2, 0x0, 0x1, 0x64, 0xA, 0x14, 0x50, 0xFD, 0x41, 0x2, 0x32, 0x2, 0x0, 0x1, 0x64, 0xA, 0x14, 0x50, 0xFE, 0x41, 0x2, 0x32, 0x2, 0x0, 0x1, 0x65, 0xA, 0x14, 0x50, 0xFD, 0x41, 0x2, 0x32, 0x3, 0x0, 0x1, 0x66, 0xA, 0x14, 0x50, 0xFC, 0x41, 0x1, 0x32, 0x3, 0x0, 0x1, 0x67, 0xA, 0x14, 0x50, 0xFC, 0x41, 0x1, 0x32, 0x4, 0x0, 0x1, 0x68, 0xA, 0x14, 0x50, 0xFC, 0x41, 0x2, 0x32, 0x4, 0x0, 0x2, 0x68, 0xA, 0x14, 0x50, 0xFD, 0x41, 0x3, 0x32, 0x5, 0x5, 0x2, 0x69, 0xA, 0x14, 0x50, 0xFE, 0x41, 0x4, 0x32, 0x6, 0xD, 0x3, 0x69, 0xA, 0x14, 0x50, 0xFE, 0x41, 0x4, 0x32, 0x6, 0x14, 0x3, 0x69, 0xA, 0x14, 0x50, 0xFF, 0x41, 0x5, 0x32, 0x7, 0x14, 0x3, 0x6A, 0xA, 0x14, 0x50, 0xFF, 0x41, 0x5, 0x32, 0x7, 0x14, 0x3, 0x6A, 0xA, 0x14, 0x50, 0xFF, 0x41, 0x5, 0x32, 0x7, 0x14, 0x3, 0x69, 0xA, 0x14, 0x50, 0xFF, 0x41, 0x5, 0x32, 0x7, 0x14, 0x3, 0x69, 0xA, 0x14, 0x50, 0xFF, 0x41, 0x5, 0x32, 0x7, 0x14, 0x3, 0x68, 0xA, 0x14, 0x50, 0xFF, 0x41, 0x5, 0x32, 0x7, 0x14, 0x3, 0x68, 0xA, 0x14, 0x50, 0xFF, 0x41, 0x5, 0x32, 0x7, 0x14, 0x3, 0x67, 0xA, 0x14, 0x50, 0xFF, 0x41, 0x5, 0x32, 0x7, 0x14, 0x3, 0x67, 0xA, 0x14, 0x50, 0xFF, 0x41, 0x5, 0x32, 0x8, 0x14, 0x3, 0x66, 0xA, 0x14, 0x50, 0xFF, 0x41, 0x5, 0x32, 0x8, 0x14, 0x3, 0x66, 0xA, 0x14, 0x50, 0xFF, 0x41, 0x5, 0x32, 0x8, 0x14, 0x3, 0x66, 0xA, 0x14, 0x50, 0xFF, 0x41, 0x5, 0x32, 0x8, 0x14, 0x3, 0x65, 0xA, 0x14, 0x50, 0xFF, 0x41, 0x5, 0x32, 0x8, 0x14, 0x3, 0x65, 0xA, 0x14, 0x50, 0xFF, 0x41, 0x5, 0x32, 0x8, 0x14, 0x3, 0x65, 0xA, 0x14, 0x50, 0xFF, 0x41, 0x5, 0x32, 0x8, 0x14, 0x3, 0x65, 0xA, 0x14, 0x50, 0x0, 0x41, 0x6, 0x32, 0x8, 0x14, 0x3, 0x64, 0xA, 0x14, 0x50, 0x0, 0x41, 0x6, 0x32, 0x8, 0x14, 0x3, 0x64, 0xA, 0x14, 0x50, 0x0, 0x41, 0x6, 0x32, 0x8, 0x14, 0x3, 0x64, 0xA, 0x14, 0x50, 0x0, 0x41, 0x6, 0x32, 0x8, 0x14, 0x3, 0x64, 0xA, 0x14, 0x50, 0x0, 0x41, 0x6, 0x32, 0x9, 0x14, 0x4, 0x63, 0xA, 0x14, 0x50, 0x0, 0x41, 0x6, 0x32, 0x9, 0x14, 0x4, 0x63, 0xA, 0x14, 0x50, 0x0, 0x41, 0x6, 0x32, 0x9, 0x14, 0x4, 0x63, 0xA, 0x14, 0x50, 0x0, 0x41, 0x6, 0x32, 0x9, 0x14, 0x4, 0x63, 0xA, 0x14, 0x50, 0xFF, 0x41, 0x6, 0x32, 0x9, 0x15, 0x4, 0x62, 0xA, 0x14, 0x50, 0xFF, 0x41, 0x6, 0x32, 0x9, 0x15, 0x4, 0x62, 0xA, 0x14, 0x50, 0xFF, 0x41, 0x6, 0x32, 0x9, 0x15, 0x4, 0x62, 0xA, 0x14, 0x50, 0xF9, 0x41, 0x0, 0x32, 0x3, 0x15, 0xFE, 0x62, 0xA, 0x14, 0x50, 0xEA, 0x41, 0xF0, 0x32, 0xF2, 0x16, 0xEE, 0x62, 0xA, 0x14, 0x50, 0xD4, 0x41, 0xD9, 0x32, 0xDB, 0x16, 0xD7, 0x62, 0xA, 0x14, 0x50, 0xBB, 0x41, 0xBF, 0x32, 0xC0, 0x17, 0xBE, 0x61, 0xA, 0x14, 0x50, 0xA4, 0x41, 0xA6, 0x32, 0xA7, 0x18, 0xA5, 0x61, 0xA, 0x14, 0x50, 0x91, 0x41, 0x92, 0x32, 0x92, 0x18, 0x92, 0x61, 0xA, 0x14, 0x50, 0x85, 0x41, 0x85, 0x32, 0x85, 0x19, 0x85, 0x61, 0xA, 0x14, 0x50, 0x81, 0x41, 0x81, 0x32, 0x81, 0x19, 0x81, 0x61, 0xA, 0x14, 0x50, 0x81, 0x41, 0x81, 0x32, 0x81, 0x19, 0x81, 0x61, 0x10, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
   
};

const static uint8_t audeara_default_eqdata[AUDEARA_EQ_DATA_LENGTH] = 
{
    0x2, 0x0, 0x0, 0x0, 0x1, 0x0, 0xD, 0x0, 0x1, 0x0, 0x90, 0x6B, 0x0, 0x22, 0x22, 0xD, 
    0x0, 0xCF, 0x2B, 0x52, 0x0, 0x9D, 0xA1, 0xF, 0x0, 0xBE, 0xC8, 0x61, 0x0, 0x61, 0xC2, 0x4, 
    0x0, 0x8F, 0x2, 0x0, 0xD, 0x0, 0x1, 0x0, 0x90, 0x6B, 0x0, 0x22, 0x0, 0x0, 0x0, 0x0, 
    0xF3, 0x51, 0x0, 0xE9, 0x0, 0x0, 0x0, 0x0, 0x86, 0x61, 0x0, 0x18, 0xC2, 0x4, 0x0, 0x8F,
};

#if 0
const static uint8_t default_name_audeara[12] = 
{
//    0x41, 0x75, 0x64, 0x65, 0x61, 0x72, 0x61, 0x20, 0x42, 0x75, 0x64, 0x73 // Audeara A
    0x54, 0x57, 0x32, 0x34, 0x31, 0x35 // TW2415
};
#else
const static uint8_t default_name_audeara[7] = 
{
    //0x54, 0x57, 0x32, 0x34, 0x31, 0x35 // TW2415 
   0x56 , 0x69 , 0x62 , 0x65 , 0x20 , 0x41 , 0x31//Vibe A1
};
#endif

const static uint8_t default_name_clinico[18] =
{
    0x43, 0x6C, 0x69, 0x6E, 0x69, 0x63, 0x6F, 0x20,
    0x53, 0x6F, 0x75, 0x6E, 0x64, 0x20, 0x42, 0x75, 
    0x64, 0x73
};

void AudearaFactoryResetDefaultDeviceNamePatch(void);
#endif /* __APPS_COMMON_NVKEY_STRUCT_H__ */
